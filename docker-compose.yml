services:
  zookeeper:
    image: "bitnami/zookeeper:3.9.1"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - ds
    healthcheck:
      test: ["CMD", "/opt/bitnami/zookeeper/bin/zkServer.sh", "status"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  kafka:
    image: "bitnami/kafka:3.6.0"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      - ds
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  mongo:
    image: mongo:jammy
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - /Users/nano/.docker/mongodb:/data/db
    ports:
      - "27017:27017"
    networks:
      - ds

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: YOUR_DB_USER
      POSTGRES_PASSWORD: YOUR_DB_PASSWORD
      POSTGRES_DB: YOUR_DB
    volumes:
      - /Users/nano/.docker/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ds

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    ports:
      - "8081:8080"
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - ds

  redis:
    image: redis:7.2.4
    ports:
      - "6379:6379"
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - ds

networks:
  ds:
    driver: bridge
